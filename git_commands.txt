# git --version
    - Exibe a versão do git utilizada

# git status
    - Exibe o status do repositório, com os todos os arquivos que foram modificados, comitados, etc.

# git init
    - Inicializa um repositório no pc
    - Portanto, cria um arquivo .git oculto na pasta que será o repo

# git add [arquivo.ext]
    - Adiciona um arquivo ao repositório.
    - Arquivos com untraked (U) são os que serão adicionados.
    - usar 'git add .' adiciona todos os arquivos existentes na pasta ao repositório.

# git commit -m "message"
    - Envia as alterações do repositório para ferramenta de gerenciamento de repositórios (GitHub e BitBucket) com uma mensagem incluida
    - A mensagem deve conter um titúlo sobre as alterações e incrementações realizadas
    - Arquivos modified (M) e added (A) serão comitados.
    - usando a flag -a (all) é possível comitar vários arquivos de uma só vez

# git branch -M master
    - Cria uma branch principal ou branch mestra no repositório

# git remote add origin [linkdoreporemoto]
    - Adiciona uma origem, em poucas palavras, atrela o repositório local ao repositório do GitHub.

# git remote rm origin
    - Remove a origem

# git remote -v
    - Exibe a origem do repo do servidor

# git push -u origin master
    - Envia o repositório com a branch main para o servidor (repo remoto) do GitHub

# git pull
    - Executa um merge entre os repos remoto e local.
    - Com esse código executado serão buscadas atualizações e, se encontradas, elas serão unidas ao código local;

# git clone [linkdoreporemoto]
    - Clona repositório na pasta atual, isto é, baixa um repo de um server remoto
    - Geralmente usado quando se ingressa no projeto pela primeira vez

# git rm
    - Deleta arquivos da monitoração do git
    - Depois de deletado ele não terá suas atualizações mais consideradas pelo git

# git log
    - Esse comando permite acessar um log de modificações feitas no projeto;
    - Todos os commits realizados até então serão informados
    - Apertando a tecla Q, saímos do log de commits

 # git mv
    - Permite renomear um arquivo ou mover um arquivo para outra pasta
    - Fazendo isso, o arquivo será inserido no git
    - O arquivo no estado anterior será deletado

# git checkout
    - Retorna ao estado original um arquivo recém modificado.
    - O estado original equivale ao estado presente na repo remota
    - Usando esse comando o arquivo sai do staging (o arquivo não será trackeado para ser dado um commit)
    - Se houver outra alteração, ele entrará novamente no staging

# .gitignore
    - Esse não é um comando, mas sim um arquivo que fica na raiz do projeto
    - Outros arquivos que não deverão entrar no versionamento serão inseridos nele, ignorando por completo esses arquivos
    - Muito útil com arquivos gerados automaticamente ou arquivos sensíveis
    - Primeiro deve-se inserir os arquivos ou pastas que serão ignorados no gitignore, depois pode-se inserir os mesmos no projeto

# git reset --hard origin/[branch]
    - Reseta um branch por completo. Todas as alterações pendentes e commitadas serão excluidos.
    - Tome cuidado com esse comando.